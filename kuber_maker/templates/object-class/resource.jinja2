{% if "status" in entity.properties %}
{% include "object-class/resource-status.jinja2" %}
{% else %}
{% include "object-class/resource-statusless.jinja2" %}
{% endif %}
    def read_resource(
            self,
            namespace: typing.Optional[str] = None
    ):
        """
        Reads the {{  entity.class_name }} from the currently configured
        Kubernetes cluster and returns the low-level definition object.
        """
        names = [
            "read_namespaced_{{ entity.class_name | snake_case }}",
            {%- if entity.class_name == "CustomObject" %}
            "read_cluster_{{ entity.class_name | snake_case }}",
            {%- else %}
            "read_{{ entity.class_name | snake_case }}",
            {%- endif %}
        ]
        return _kube_api.execute(
            action="read",
            resource=self,
            names=names,
            namespace=namespace,
            api_client=None,
            api_args={"name": self.metadata.name},
        )

    def delete_resource(
            self,
            namespace: typing.Optional[str] = None,
            propagation_policy: str = "Foreground",
            grace_period_seconds: int = 10
    ):
        """
        Deletes the {{ entity.class_name }} from the currently configured
        Kubernetes cluster.
        """
        names = [
            "delete_namespaced_{{ entity.class_name | snake_case }}",
            {%- if entity.class_name == "CustomObject" %}
            "delete_cluster_{{ entity.class_name | snake_case }}",
            {%- else %}
            "delete_{{ entity.class_name | snake_case }}",
            {%- endif %}
        ]

        body = client.V1DeleteOptions(
            propagation_policy=propagation_policy,
            grace_period_seconds=grace_period_seconds
        )

        _kube_api.execute(
            action="delete",
            resource=self,
            names=names,
            namespace=namespace,
            api_client=None,
            api_args={"name": self.metadata.name, "body": body}
        )

    @staticmethod
    def get_resource_api(
            api_client: typing.Optional[client.ApiClient] = None,
            **kwargs
    ) -> "client.{{ kubernetes_api_class_name }}":
        """
        Returns an instance of the kubernetes API client associated with
        this object.
        """
        if api_client:
            kwargs["apl_client"] = api_client
        return client.{{ kubernetes_api_class_name }}(**kwargs)
